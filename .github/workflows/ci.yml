on:
  merge_group:
  pull_request:
  push:
    branches:
      - main

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo check

  test:
    name: Test Suite
    needs:
      - check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --all-features
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  build:
    name: Build library
    runs-on: ${{ matrix.os }}
    needs:
      - test
      - fmt
      - clippy
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            dylib: libpost.so
            staticlib: libpost.a

          - os: [self-hosted, linux, arm64]
            dylib: libpost.so
            staticlib: libpost.a
            rustflags: --cfg=aes_armv8
            artifact-name: linux-arm64

          - os: [self-hosted, macos, arm64]
            dylib: libpost.dylib
            staticlib: libpost.a
            rustflags: --cfg=aes_armv8
            artifact-name: macos-m1

          - os: macos-latest
            dylib: libpost.dylib
            staticlib: libpost.a

          - os: windows-latest
            dylib: post.dll
            staticlib: post.lib
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ join( matrix.os, '-' ) }}
      - run: cd ffi && cargo build --profile release-clib
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libpost-${{ matrix.artifact-name || matrix.os }}
          path: |
            ffi/prover.h
            target/release-clib/${{ matrix.dylib }}
            target/release-clib/${{ matrix.staticlib }}
